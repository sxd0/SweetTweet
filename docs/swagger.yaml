basePath: /
definitions:
  model.ErrorResponse:
    properties:
      message:
        example: Invalid input
        type: string
    type: object
  model.LoginInput:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: "123456"
        type: string
    type: object
  model.LoginResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  model.MeResponse:
    properties:
      user_id:
        example: 1
        type: integer
    type: object
  model.RegisterInput:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: "123456"
        type: string
    type: object
  model.UserResponse:
    properties:
      email:
        example: user@example.com
        type: string
      id:
        example: 1
        type: integer
    type: object
host: localhost:8081
info:
  contact: {}
  description: SweetTweet
  title: Auth Service API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login with email and password
      parameters:
      - description: User credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Login
      tags:
      - auth
  /me:
    get:
      description: Returns current user ID from JWT
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MeResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get current user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user by email and password
      parameters:
      - description: User credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
