services:
  db:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - sweettweet

  mongo:
    image: mongo:6.0
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - backend

  redis:
    image: redis:7.2
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - backend


  user:
    build:
      context: ..
      dockerfile: cmd/user/Dockerfile
    command: /app/cmd/user/user
    depends_on:
      - mongo
      - redis
    environment:
      - MONGO_URI=mongodb://mongo:27017
    networks:
      - backend
    ports:
      - "8082:8082"


  auth:
    build:
      context: ../
      dockerfile: cmd/auth/Dockerfile
    container_name: auth
    depends_on:
      - db
    ports:
      - "8081:8081"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      AUTH_SERVICE_PORT: 8081
    networks:
      - sweettweet

volumes:
  pgdata:
  mongo-data:
  redis-data:

networks:
  sweettweet:
  backend:
